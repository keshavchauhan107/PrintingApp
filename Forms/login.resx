<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAgAAAAcAAAAPgAAAH8AAAD/gAAB8=
</value>
  </data>
</root>